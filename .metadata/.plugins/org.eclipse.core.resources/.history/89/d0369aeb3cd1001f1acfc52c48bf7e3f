package p1927minheap;

public class Main2 {

}

class MinHeap {
	private int[] tree;
	private int size;
	
	public MinHeap(int capacity) {
		this.tree = new int[capacity + 1];
	}
	
	public void add(int element) {
		int index = ++size;
		tree[index] = element;
		
		while (index / 2 > 0 && tree[index] < tree[index / 2]) {
			int temp = tree[index];
			tree[index] = tree[index / 2];
			tree[index / 2] = temp;
			index <<= 1;
		}
	}
	
	public int poll() {
		if (size == 0) {
			return 0;
		}
		
		int index = 1;
		int ret = tree[index];
		tree[index] = tree[size--];
		
		while (2 * index <= size) {
			if (2 * index == size && tree[index] > tree[2 * index]) {
				int temp = tree[index];
				tree[index] = tree[2 * index];
				tree[2 * index] = temp;
				break;
			}
			
			if (tree[index] > tree[2 * index] && tree[2 * index] >= tree[2 * index + 1]) {
				
			}
			
			break;
		}
		
		return ret;
	}
}