package p1647citydivide;

import java.io.*;
import java.util.*;

public class Main {
	private static int N, M, edgeCount, result;
	private static PriorityQueue<Integer[]> edgeList = new PriorityQueue<>((o1, o2) -> o1[2] - o2[2]);
	private static PriorityQueue<Integer> minEdges = new PriorityQueue<>(Comparator.reverseOrder());
	
	public static void main(String[] args) throws IOException {
		System.setIn(new FileInputStream("src/p1647citydivide/input.txt"));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		StringTokenizer tokenizer = new StringTokenizer(br.readLine());
		N = Integer.parseInt(tokenizer.nextToken());
		M = Integer.parseInt(tokenizer.nextToken());
		for (int i = 0; i < M; i++) {
			edgeList.add(Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::parseInt).toArray());
		}
	}
}
