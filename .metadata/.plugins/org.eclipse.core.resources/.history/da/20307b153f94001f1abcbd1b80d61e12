package p1697hideandseek;

import java.io.*;
import java.util.*;
import java.util.stream.IntStream;

public class Main {
	private static final int INF = 100_001;
	
	public static void main(String[] args) throws IOException {
		System.setIn(new FileInputStream("src/p1697hideandseek/input.txt"));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		StringTokenizer tokenizer = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(tokenizer.nextToken());
		int K = Integer.parseInt(tokenizer.nextToken());
		
		int[] dp = new int[INF];
		Arrays.fill(dp, INF);
		dp[N] = 0;
		
		IntStream.range(0, INF).forEach(i -> {
			if (N + i + 1 < INF) {
				dp[N + i + 1] = Math.min(dp[N + i + 1], dp[N + i] + 1);
			}
			
			if (N - i - 1 >= 0) {
				dp[N - i - 1] = Math.min(dp[N - i - 1], dp[N - i] + 1);
			}
		});
		
		System.out.println(Arrays.toString(dp));
	}
}
